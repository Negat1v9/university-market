services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    depends_on:
      - server
    networks:
      - node-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server
    image: marketplace:latest
    networks:
      - node-network
    env_file:
      - .env
    depends_on:
      - mongodb1
      - mongodb2
  
  mongodb1:
    image: mongo:latest
    container_name: mongodb1
    ports:
      - 27017:27017
    networks:
      - node-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: ["--replSet", "rs0", "--bind_ip", "127.0.0.1,mongodb1", "--port", "27017", "--keyFile", "/data/configdb/mongodb-keyfile"]
    volumes:
      - mongo-workmarket-place:/data/db
      - mongo-cfg-workmarket-place:/data/configdb
      - ./mongo-keyfile:/data/configdb/mongodb-keyfile
    healthcheck:
      test: echo "try {rs.status()} catch(err) {rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongodb1:27017\",priority:1},{_id:1,host:\"mongodb2:27018\",priority:0.5}]})}" | mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --quiet"
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 10s
  mongodb2:
    image: mongo:latest
    container_name: mongodb2
    ports:
      - 27018:27018
    networks:
      - node-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: ["--replSet", "rs0", "--bind_ip", "127.0.0.1,mongodb2", "--port", "27018", "--keyFile", "/data/configdb/mongodb-keyfile"]
    volumes:
      - mongo2-workmarket-place:/data/db
      - mongo2-cfg-workmarket-place:/data/configdb
      - ./mongo-keyfile:/data/configdb/mongodb-keyfile
    

volumes:
  mongo-workmarket-place:
  mongo-cfg-workmarket-place:
  mongo2-workmarket-place:
  mongo2-cfg-workmarket-place:

networks:
  node-network:
    driver: bridge