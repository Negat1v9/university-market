// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/payment/type.go

// Package payment_service_mock is a generated GoMock package.
package payment_service_mock

import (
	context "context"
	reflect "reflect"

	paymentmodel "github.com/Negat1v9/work-marketplace/model/payment"
	gomock "github.com/golang/mock/gomock"
)

// MockPaymentService is a mock of PaymentService interface.
type MockPaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceMockRecorder
}

// MockPaymentServiceMockRecorder is the mock recorder for MockPaymentService.
type MockPaymentServiceMockRecorder struct {
	mock *MockPaymentService
}

// NewMockPaymentService creates a new mock instance.
func NewMockPaymentService(ctrl *gomock.Controller) *MockPaymentService {
	mock := &MockPaymentService{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentService) EXPECT() *MockPaymentServiceMockRecorder {
	return m.recorder
}

// CreateInvoiceLink mocks base method.
func (m *MockPaymentService) CreateInvoiceLink(ctx context.Context, workerID string, data *paymentmodel.PaymentLinkReq) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvoiceLink", ctx, workerID, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvoiceLink indicates an expected call of CreateInvoiceLink.
func (mr *MockPaymentServiceMockRecorder) CreateInvoiceLink(ctx, workerID, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvoiceLink", reflect.TypeOf((*MockPaymentService)(nil).CreateInvoiceLink), ctx, workerID, data)
}

// SuccessBalancePayment mocks base method.
func (m *MockPaymentService) SuccessBalancePayment(ctx context.Context, sp *paymentmodel.SuccessPayment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SuccessBalancePayment", ctx, sp)
	ret0, _ := ret[0].(error)
	return ret0
}

// SuccessBalancePayment indicates an expected call of SuccessBalancePayment.
func (mr *MockPaymentServiceMockRecorder) SuccessBalancePayment(ctx, sp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SuccessBalancePayment", reflect.TypeOf((*MockPaymentService)(nil).SuccessBalancePayment), ctx, sp)
}
